---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.18.0
  name: kurrentdbbackups.kubernetes.kurrent.io
spec:
  group: kubernetes.kurrent.io
  names:
    kind: KurrentDBBackup
    listKind: KurrentDBBackupList
    plural: kurrentdbbackups
    singular: kurrentdbbackup
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Source node name
      jsonPath: .status.sourceNodeName
      name: Source Node
      type: string
    - description: Source node role
      jsonPath: .status.sourceNodeRole
      name: Source Node Role
      type: string
    - description: Status
      jsonPath: .status.state
      name: Status
      type: string
    - description: Ready
      jsonPath: .status.ready
      name: Ready
      type: boolean
    - description: Error
      jsonPath: .status.error
      name: Error
      type: string
    - description: Time when backup was taken
      jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - description: time to live
      jsonPath: .spec.ttl
      name: TTL
      type: string
    name: v1
    schema:
      openAPIV3Schema:
        description: KurrentDBBackup is the Schema for the KurrentDBBackups API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: KurrentDBBackupSpec defines the desired state of KurrentDBBackup
            properties:
              clusterName:
                description: Backup cluster name
                type: string
                x-kubernetes-validations:
                - message: DBBackup objects are immutable, except for TTL
                  rule: self == oldSelf
              extraMetadata:
                description: ExtraMetadata contains additional annotations and labels
                  for child resources.
                properties:
                  all:
                    description: |-
                      All specifies extra metadata for all child resource types (though currently there is only
                      one type of child resource).
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        type: object
                    type: object
                  volumeSnapshots:
                    description: VolumeSnapshots specifies extra metadata for VolumeSnapshots.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        type: object
                    type: object
                type: object
                x-kubernetes-validations:
                - message: DBBackup objects are immutable, except for TTL
                  rule: self == oldSelf
              nodeName:
                description: The node index for backup to be created. If not set,
                  backup will be created from the leader node
                type: string
                x-kubernetes-validations:
                - message: DBBackup objects are immutable, except for TTL
                  rule: self == oldSelf
              ttl:
                description: |-
                  TTL expresses how long the backup should remain until it is deleted.  If unset, the backup
                  will remain until it is manually deleted.  The format of the TTL is a positive integer
                  followed by one of "h" for hour, "d" for day, "w" for week, "y" for year (technically 365
                  days), or "s" for second (for testing purposes).  Times can be combined, e.g. 1d12h is
                  equivalent to 36hours.
                pattern: ^(?:0*[1-9][0-9]*y)?(?:0*[1-9][0-9]*w)?(?:0*[1-9][0-9]*d)?(?:0*[1-9][0-9]*h)?(?:0*[1-9][0-9]*s)?$
                type: string
              volumeSnapshotClassName:
                description: |-
                  Which volume snapshot class to use when creating this backup.  If empty, the value will be
                  taken from the KurrentDB resources being snapshotted, or the kurrentdb-operator config, or
                  the default volume snapshot class for the whole kubernetes cluster (in that order).
                type: string
                x-kubernetes-validations:
                - message: DBBackup objects are immutable, except for TTL
                  rule: self == oldSelf
            required:
            - clusterName
            type: object
          status:
            description: KurrentDBBackupStatus defines the observed state of KurrentDBBackup
            properties:
              creationTime:
                format: date-time
                type: string
              error:
                type: string
              ready:
                type: boolean
              sourceNodeName:
                type: string
              sourceNodeRole:
                type: string
              state:
                type: string
            required:
            - ready
            - sourceNodeName
            - sourceNodeRole
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
